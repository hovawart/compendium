<project>
  <property environment="env" />
  <property name="sdk.dir" location="../tools/appengine-java-sdk" />
  <property name="junit.dir" location="${env.JUNIT_DIR}" />

  <import file="${sdk.dir}/config/user/ant-macros.xml" />

  <path id="project.classpath">
    <pathelement path="war/WEB-INF/classes" />
    <fileset dir="war/WEB-INF/lib">
      <include name="**/*.jar" />
    </fileset>
    <fileset dir="${sdk.dir}/lib">
      <include name="shared/**/*.jar" />
    </fileset>
  </path>

  <target name="copyjars"
      description="Copies the App Engine JARs to the WAR.">
    <copy
        todir="war/WEB-INF/lib"
        flatten="true">
      <fileset dir="${sdk.dir}/lib/user">
        <include name="**/*.jar" />
      </fileset>
    </copy>
  </target>

  <target name="compile" depends="copyjars"
      description="Compiles Java source and copies other source files to the WAR.">
    <mkdir dir="war/WEB-INF/classes" />
    <copy todir="war/WEB-INF/classes">
      <fileset dir="src">
        <exclude name="**/*.java" />
      </fileset>
    </copy>
    <javac
        srcdir="src"
        destdir="war/WEB-INF/classes"
        classpathref="project.classpath"
        debug="on" />
  </target>

  <target name="datanucleusenhance" depends="compile"
      description="Performs JDO enhancement on compiled data classes.">
    <!-- <enhance_war war="war" /> -->
  </target>

  <target name="runserver" depends="datanucleusenhance"
      description="Starts the development server.">
    <dev_appserver war="war">
      <options>
        <arg value="--jvm_flag=-Xmx1024m"/>
        <arg value="--address=0.0.0.0"/>
        <arg value="--port=8081"/>
      </options>
    </dev_appserver>
  </target>

  <target name="debug" depends="datanucleusenhance"
          description="Launches dev_appserver with remote debugging enabled">
    <echo message="Launching dev_appserver on Web port ${http.port}, Java remote debug port 8998"/>
    <dev_appserver war="war">
      <options>
        <arg value="--jvm_flag=-Xdebug"/>
        <arg value="--jvm_flag=-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8998"/>
        <arg value="--jvm_flag=-Xmx1024m"/>
        <arg value="--address=0.0.0.0"/>
        <arg value="--port=8081"/>
      </options>
    </dev_appserver>
  </target>

  <target name="update" depends="datanucleusenhance"
      description="Uploads the application to App Engine.">
    <appcfg action="update" war="war">
      <options>
        <arg value="--email=bink.lynch@gmail.com"/>
        <arg value="--passin"/>
      </options>
    </appcfg>
  </target>

  <target name="update_indexes" depends="datanucleusenhance"
      description="Uploads just the datastore index configuration to App Engine.">
    <appcfg action="update_indexes" war="war" />
  </target>

  <target name="rollback" depends="datanucleusenhance"
      description="Rolls back an interrupted application update.">
    <appcfg action="rollback" war="war" />
  </target>

  <target name="request_logs"
      description="Downloads log data from App Engine for the application.">
    <appcfg action="request_logs" war="war">
      <options>
        <arg value="--num_days=5"/>
      </options>
      <args>
        <arg value="logs.txt"/>
      </args>
    </appcfg>
  </target>


  <path id="compile.classpath">
    <fileset dir="lib">
      <include name="**/*.jar" />
    </fileset>
  </path>

  <target name="check-js">
      <condition property="isMainNotExists">
          <not>
            <available file="war/js/app/compiled.js"/>
          </not>
      </condition>
  </target>

  <target name="optimize" description="Runs the require.js optimizer." depends="check-js" if="isMainNotExists">
      <echo message="war/js/app/compiled.js not exists: ${isMainNotExists}"/>
      <java fork="yes" dir="${basedir}" classname="org.mozilla.javascript.tools.shell.Main">
          <classpath refid="compile.classpath"/>
          <jvmarg value="-Xmx512m"/>
          <arg value="r.js" />
          <arg value="-o" />
          <arg value="war/js/app.build.js" />
      </java>
  </target>

  <target name="clean-js" description="Removes any optimized js files.">
      <delete>
          <fileset dir="war/js/app" includes="compiled.js"/>
      </delete>
  </target>

  <target name="time">
    <exec executable="date"/>
  </target>

  <target name="run" depends="runserver" />

</project>
